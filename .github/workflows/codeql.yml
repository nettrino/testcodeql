# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '30 3 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 2

    # - uses: actions/download-artifact@v3
    #   with:
    #     name: graphql-latest
    #     path: /tmp/graphql-previous 

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        packs: nettrino/nomod
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality
    - name: See codeql location
      run: |
        echo "$CODEQL_DEFAULT"

        
    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ℹ️ Command-line programs to run using the OS shell.
    # 📚 See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    # - run: |
    #   echo "Run, Build Application using script"
    #   ./location_of_script_within_repo/buildscript.sh

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"

    - name: Copy previous analysis results
      run: cp /home/runner/work/_temp/codeql_databases/python/results/nettrino/nomod/transitive.bqrs /tmp/transitive.bqrs
    
    - name: Checkout previous commit
      run: git checkout HEAD~1
    
    - name: Re-Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        packs: nettrino/nomod
        db-location: /tmp/newdb_loc
        languages: ${{ matrix.language }}
    
    - name: Perform CodeQL Analysis on previous state
      uses: github/codeql-action/analyze@v2
      with:
        category: "previous_commit"

    - name: Upload original analysis file
      uses: actions/upload-artifact@v3
      with:
        name: latest-transitive
        path: /tmp/transitive.bqrs
    
    - name: Upload new analysis file
      uses: actions/upload-artifact@v3
      with:
        name: previous-transitive
        path: /tmp/newdb_loc/python/results/nettrino/nomod/transitive.bqrs 


    - name: See if there's a diff
      run: |
        $CODEQL_DEFAULT bqrs decode /tmp/newdb_loc/python/results/nettrino/nomod/transitive.bqrs  > /tmp/old.csv 
        $CODEQL_DEFAULT bqrs decode /tmp/transitive.bqrs > /tmp/new.csv

    - name: assign reviewer
      uses: LongOddCode/assign-reviewer@0.2.2
      with:
        #github access token.
        token: ${{ secrets.REVIEWER_TOKEN }}

        # Github action doesn't support arrary rightnow. So use json array
        # as a workaround.
        # Required.
        reviewers: '["miki725"]'

        # Number to assign to reviewer.
        # set 0 if you want assign all of them.
        # Optional. Default 0.
        conscript: 0

        # Which kind of script do you wanna use.
        # Optional. Default "bash" on Linux & Mac. PowerShell on Windows.
        script: bash

        # Set this as true if condition matched.
        # Required.
        result: TELEMETRY_RESULT

        # Your business logic.
        # Required.
        run: |
          if ! diff -q /tmp/old.csv /tmp/new.csv; then
            echo '::set-output name=TELEMETRY_RESULT::true'
          fi
